spriteset (spriteset_metroconcrete_gui_opengfx, "gfx/ogfx_concrete_gui.png") {
    template_gui(10,20)
}
spriteset (spriteset_metroconcrete_gui_ttd, "gfx/ttd_concrete_gui.png") {
    template_gui_ttd(10,20)
}
switch (FEAT_RAILTYPES, SELF, switch_metroconcrete_metro_gui, param_gui) {
    1: spriteset_metroconcrete_gui_ttd;
    spriteset_metroconcrete_gui_opengfx;
}
// OpenGFX track cover
spriteset (spriteset_metroconcrete_catenary_wire_opengfx, "gfx/terrain/concrete.png") {
    template_catenary_wire(1,1)
}
// TTD track cover
spriteset (spriteset_metroconcrete_catenary_wire_ttd, "gfx/terrain_ttd/concrete.png") {
    template_catenary_wire(1,1)
}
// Select terrain from parameter
switch (FEAT_RAILTYPES, SELF, switch_metroconcrete_catenary_wire_param_gui, param_gui) {
    1                       :spriteset_metroconcrete_catenary_wire_ttd;
    spriteset_metroconcrete_catenary_wire_opengfx;
}
switch (FEAT_RAILTYPES, SELF, switch_metroconcrete_catenary_wire_param, param_terrain_use) {
    1                       :spriteset_metroconcrete_catenary_wire_opengfx;
    2                       :spriteset_metroconcrete_catenary_wire_ttd;
    switch_metroconcrete_catenary_wire_param_gui;
}

spriteset (spriteset_metroconcrete_tunnel_overlay_opengfx, "gfx/terrain/concrete.png") {
    template_tunnel_overlay(1,51)
}
spriteset (spriteset_metroconcrete_tunnel_overlay_ttd, "gfx/terrain_ttd/concrete.png") {
    template_tunnel_overlay(1,51)
}
switch (FEAT_RAILTYPES, SELF, switch_metroconcrete_tunnel_overlay_param_gui, param_gui) {
    1                       :spriteset_metroconcrete_tunnel_overlay_ttd;
    spriteset_metroconcrete_tunnel_overlay_opengfx;
}
switch (FEAT_RAILTYPES, SELF, switch_metroconcrete_tunnel_overlay_param, param_terrain_use) {
    1                       :spriteset_metroconcrete_tunnel_overlay_opengfx;
    2                       :spriteset_metroconcrete_tunnel_overlay_ttd;
    switch_metroconcrete_tunnel_overlay_param_gui;
}

if (param_metroconcrete > 0) {
    if (railtype_available("SUAZ") || loading_stage == LOADING_STAGE_RESERVE) {
        // Count number of activated railtypes
        param_railtype_activated = param_railtype_activated + 1;
        item (FEAT_RAILTYPES, item_metroconcrete) {
            property {
                label:                          "SUAZ";
                name:                           string(str_metroconcretetrack_name);
                menu_text:                      string(str_metroconcretetrack_menu_text);
                build_window_caption:           string(str_metroconcretetrack_build_window_caption);
                autoreplace_text:               string(str_metroconcretetrack_autoreplace_text);
                new_engine_text:                string(str_metroconcretetrack_new_engine_text);
				compatible_railtype_list:[
					"RAIL",
					"ELRL",
					"SAAN",
					"SABN",
					"SACN",
					"SADN",
					"SAEN",
					"SAAE",
					"SABE",
					"SACE",
					"SADE",
					"SAEE",
					"SAAD",
					"SABD",
					"SACD",
					"SADD",
					"SAED",
					"SAAd",
					"SABd",
					"SACd",
					"SADd",
					"SAEd",
					"SAAA",
					"SABA",
					"SACA",
					"SADA",
					"SAEA",
					"SAAa",
					"SABa",
					"SACa",
					"SADa",
					"SAEa",
					"SAA3",
					"SAAZ",
					"SSAZ",
				];
				powered_railtype_list:[
					"ELRL",
					"SAAE",
					"SABE",
					"SACE",
					"SADE",
					"SAEE",
					"SAAD",
					"SABD",
					"SACD",
					"SADD",
					"SAED",
					"SAAd",
					"SABd",
					"SACd",
					"SADd",
					"SAEd",
					"SAAA",
					"SABA",
					"SACA",
					"SADA",
					"SAEA",
					"SAAa",
					"SABa",
					"SACa",
					"SADa",
					"SAEa",
					"SAA3",
					"SAAZ",
					"SSAZ",
				];
                railtype_flags:                 bitmask(RAILTYPE_FLAG_CATENARY, RAILTYPE_FLAG_NO_LEVEL_CROSSING);
                curve_speed_multiplier:         1;
                station_graphics:               RAILTYPE_STATION_NORMAL;
                speed_limit:                    0;
                acceleration_model:             ACC_MODEL_RAIL;
            }

			// OpenTTD 1.1 19307
            if (openttd_version >= version_openttd(1, 1, 0, 19307)) {
                property {
                    construction_cost:          65;
                    map_colour:                 0x1E;
                }
            }
            // OpenTTD 1.2 23758
            if (openttd_version >= version_openttd(1, 2, 0, 23758)) {
                property {
                    toolbar_caption:            string(str_metroconcretetrack_toolbar_caption);
                    maintenance_cost:           24;
                    alternative_railtype_list:  ["MTRC",
                                                 "SUAZ", "SUBZ", "SUCZ", "SUDZ", "SUEZ"];
                }
            }

            if (param_extrasnow == 1) {
				// Snowy version
                graphics {
                    gui:                        switch_metroconcrete_metro_gui;
                    track_overlay:              switch_track_overlay_param;
                    underlay:                   switch_underlay_param;
                    tunnels:                    switch_tunnels_param;
                    catenary_wire:              switch_metroconcrete_catenary_wire_param;
                    catenary_pylons:            spriteset_metrounderground_catenary_pylons;
                    bridge_surfaces:            switch_bridge_surfaces_param;
                    level_crossings:            switch_level_crossings_param;
                    depots:                     switch_depots_opengfx_snow;
                    fences:                     spriteset_metrounderground_catenary_pylons;
                    tunnel_overlay:             switch_metroconcrete_tunnel_overlay_param;
                    signals:                    switch_signals;
                }
            } else {
				// Normal ballast version
                graphics {
                    gui:                        switch_metroconcrete_metro_gui;
                    track_overlay:              switch_track_overlay_param;
                    underlay:                   switch_underlay_param;
                    tunnels:                    switch_tunnels_param;
                    catenary_wire:              switch_metroconcrete_catenary_wire_param;
                    catenary_pylons:            spriteset_metrounderground_catenary_pylons;
                    bridge_surfaces:            switch_bridge_surfaces_param;
                    level_crossings:            switch_level_crossings_param;
                    // depots:
                    fences:                     spriteset_metrounderground_catenary_pylons;
                    tunnel_overlay:             switch_metroconcrete_tunnel_overlay_param;
                    signals:                    switch_signals;
                }
            }
        }
    } else {
        // Count number of disabled railtypes
        param_railtype_disabled = param_railtype_disabled + 1;
    }
}
